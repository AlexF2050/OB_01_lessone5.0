# Определите класс Account, имитирующий банковский счет.
# Класс должен иметь следующие атрибуты для хранения идентификатора владельца, баланс счёта,
# и методы для депозита (пополнения) и снятия средств, если на счету достаточно средств.


class Account(): # Класс счёта
    def __init__(self, id, balance=0):  # Конструктор счёта с параметрами идентификатора и баланса счёта
        self.id = id # Идентификатор счёта
        self.balance = balance # Баланс счёта

    def deposit(self, money): # Депозит счёта
        if money > 0: # Проверка наличия денег на счёте
            self.balance += money # Добавление денег на счёт
            print(f"Вы успешно пополнили счёт! Сумма на счету - {self.balance} рублей") # Вывод сообщения

    def withdraw(self, money): # Снятие средств с счёта
        if money > self.balance: # Проверка наличия денег на счёте
            print(f"Не достаточно средств на счёте. Сумма на счёте - {self.balance}") # Вывод сообщения
        elif money <= self.balance: # Проверка наличия денег на счёте
            self.balance -= money # Уменьшение баланса счёта
            print(f"Вы успешно сняли {money} рублей. - Остаток на счете {self.balance} рублей") # Вывод сообщения

    def all_balance(self): # Вывод баланса счёта
        print(f"Ваш текущий баланс на счете - {self.balance} рублей") # Вывод сообщения


man = Account(1234_5678_7654_3210, 600 ) # Создание счёта с параметрами идентификатора и баланса счёта

man.all_balance() # Вывод баланса счёта
man.withdraw(450) # Снятие средств с счёта
man.withdraw(800) # Снятие средств с счёта
man.deposit(23000) # Депозит счёта