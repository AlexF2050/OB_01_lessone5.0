#Ты разрабатываешь программное обеспечение для сети магазинов. Каждый магазин в этой сети имеет свои особенности,
#но также существуют общие характеристики, такие как адрес, название и ассортимент товаров.
#Ваша задача — создать класс Store, который можно будет использовать для создания различных магазинов.

#Создай класс Store:
#-Атрибуты класса:
#name: название магазина.
#address: адрес магазина.
#items: словарь, где ключ - название товара, а значение - его цена. Например, {'apples': 100, 'bananas': 150}.
#Методы класса:
#__init__ - конструктор, который инициализирует название и адрес, а также пустой словарь для items.

# ______________________________________________ Конструктор класса Store ______________________________________________

class Store:
    def __init__(self, name_store, address): #конструктор класса Store с аргументами name_store и address
        self.name = name_store #создание атрибута name с аргументом address в конструкторе класса Store
        self.address = address #создание атрибута address с аргументом address в конструкторе класса Store
# Создаём словарь items: где ключ - название товара name_product, а значение - его цена price_product. Например, {'apples': 0.5, 'bananas': 0.75}.
        self.items = {} #создание атрибута items с пустым словарем в конструкторе класса Store

    # создаём метод для добавления товара в ассортимент
    def add_item(self, name_product, price_product): #создаём метод для добавления товара в ассортимент
        self.items[name_product] = price_product #создание атрибута items с аргументом price_product в конструкторе класса Store

    # создаём метод для удаления товара из ассортимента
    def remove_item(self, name_product): #создаём метод для удаления товара из ассортимента
        del self.items[name_product] #удаление атрибута items с аргументом name_product из конструктора класса Store

    # создаём метод для получения цены товара по его названию. Если товар отсутствует, возвращайте None
    def get_item_price(self, name_product): #создаём метод для получения цены товара по его названию
        if name_product in self.items: #если товар есть в словаре items
            return self.items[name_product] #возвращаем цену товара
        else: #если товар отсутствует в словаре items
            return None #возвращаем None
        #print('Товар не найден') #выводим сообщение о том, что товар не найден

    # создаём метод для обновления цены товара
    def update_item_price(self, name_product, price_product): #создаём метод для обновления цены товара
        self.items[name_product] = price_product #создание атрибута items с аргументом price_product в конструкторе класса Store

# ______________________________________________ Объекты класса Store __________________________________________________
# Создай несколько объектов класса Store:
# Создай не менее трех различных магазинов с разными названиями, адресами и добавь в каждый из них несколько товаров.
store1 = Store('Магазин "Восход"', 'г. Москва, ул. Ленина, д. 10')
store2 = Store('Магазин 2', 'г. Москва, ул. Ленина, д. 22')
store3 = Store('Магазин 3', 'г. Москва, ул. Ленина, д. 33')

# Выбери один из созданных магазинов и протестируй все его методы: добавь товар, обнови цену, убери товар и запроси цену.
print('"Восход"') #выводим название магазина
print('Введите название товара: ') #запросим название товара
name_product = input() #вводим название товара
print('Введите цену товара: ') #запросим цену товара
price_product = float(input()) #вводим цену товара
store1.add_item(name_product, price_product) #добавляем товар в ассортимент

# выводим на экран название товара и цену товара
print('"Восход" имеет в своем ассортименте следующие товары: ')  #выводим название магазина
print('Название товара: ', name_product) #выводим название товара
print('Цена товара: ', price_product) #выводим цену товара

# вводим новую цену товара
print('Введите новую цену товара: ') #запросим новую цену товара
price_product = float(input()) #вводим новую цену товара

# выводим на экран название товара и цену товара
print('"Восход" имеет в своем ассортименте следующие товары: ')  #выводим название магазина
print('Название товара: ', name_product)
print('Цена товара: ', price_product)

# Удаление товара
print('Введите название товара, который хотите удалить: ') #запросим название товара
name_product = input() #вводим название товара
store1.remove_item(name_product) #удаляем товар из ассортимента

# Запрос цены товара
print('Введите название товара, цену которого хотите узнать: ') #запросим название товара
name_product = input() #вводим название товара
print('Цена товара: ', store1.get_item_price(name_product)) #выводим цену товара

#Часа 4 писал этот код




















